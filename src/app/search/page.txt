'use client';

import { useState, useEffect } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import Header from '@/components/layout/Header';
import PostCard from '@/components/views/PostCard';
import Image from 'next/image';
import type { Post } from '@/interfaces/post.interface';

export default function SearchPage() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const initialQuery = searchParams.get('query') || '';
  const [searchQuery, setSearchQuery] = useState(initialQuery);
  const [posts, setPosts] = useState<Post[]>([]);
  const [loading, setLoading] = useState(false);
  const [searched, setSearched] = useState(!!initialQuery);
  const [currentPage, setCurrentPage] = useState(1);
  const postsPerPage = 10;

  // Redirect ke home jika belum login
  useEffect(() => {
    if (typeof window !== 'undefined' && !localStorage.getItem('token')) {
      router.replace('/');
    }
  }, [router]);

  // Reset pagination ke halaman 1 setiap kali searchQuery berubah
  useEffect(() => {
    setCurrentPage(1);
  }, [searchQuery]);

  // Fetch data setiap kali query atau halaman berubah
  useEffect(() => {
    if (searchQuery) {
      handleSearch(searchQuery, currentPage);
    } else {
      setPosts([]);
      setSearched(false);
    }
  }, [searchQuery, currentPage]);

  async function handleSearch(query: string, page: number) {
    setLoading(true);
    setSearched(true);
    try {
      const res = await fetch(
        `${process.env.NEXT_PUBLIC_BASE_API_URL}/posts/search?query=${encodeURIComponent(query)}&limit=${postsPerPage}&page=${page}`
      );
      const data = await res.json();
      setPosts(data.data || []);
    } catch {
      setPosts([]);
    }
    setLoading(false);
  }

  // Handler untuk Header: hanya trigger search saat submit (Enter/klik ikon)
  const handleHeaderSearch = (query: string) => {
    setSearchQuery(query);
    router.push(`/search?query=${encodeURIComponent(query)}`);
    // setCurrentPage(1) sudah otomatis via useEffect di atas
  };

  // Handler untuk pagination (misal tombol Next/Prev)
  const handlePageChange = (page: number) => {
    setCurrentPage(page);
  };

  return (
    <main className="flex flex-col bg-white min-h-screen md:pt-[128px]">
      <Header
        searchQuery={searchQuery}
        onSearch={handleHeaderSearch}
      />

      <div className="w-full max-w-[807px] md:ml-[120px]">
        {loading && (
          <div className="fixed inset-0 flex flex-col items-center justify-center bg-white z-50">
            <div className="animate-spin rounded-full h-12 w-12 border-t-4 border-blue-500 border-solid mb-6"></div>
            <p className="text-gray-600 text-lg">Loading...</p>
          </div>
        )}

        {!loading && posts.length > 0 && searchQuery && (
          <div className="w-full flex flex-col">
            <h2 className="text-2xl font-semibold text-gray-900 mb-9">
              Result for <span className="font-bold">&quot;{searchQuery}&quot;</span>
            </h2>
            <div className="flex flex-col gap-9 mb-9">
              {posts.map(post => (
                <PostCard key={post.id} post={post} horizontal />
              ))}
            </div>
            {/* Pagination */}
            <div className="flex gap-2 justify-center mb-9">
              <button
                className="px-4 py-2 rounded bg-gray-200"
                disabled={currentPage === 1}
                onClick={() => handlePageChange(currentPage - 1)}
              >
                Prev
              </button>
              <span className="px-4 py-2">{currentPage}</span>
              <button
                className="px-4 py-2 rounded bg-gray-200"
                disabled={posts.length < postsPerPage}
                onClick={() => handlePageChange(currentPage + 1)}
              >
                Next
              </button>
            </div>
          </div>
        )}

        {!loading && searched && posts.length === 0 && (
          <div className="fixed inset-0 flex flex-col items-center justify-center bg-white z-50">
            <Image src="/nopost.svg" alt="No results" width={118} height={135} />
            <p className="mt-6 text-lg font-semibold text-gray-700">No results found</p>
            <p className="text-gray-500 mb-6">Try using different keywords</p>
            <button
              className="px-6 py-2 bg-blue-500 text-white rounded-full cursor-pointer"
              onClick={() => router.push('/')}
            >
              Back to Home
            </button>
          </div>
        )}
      </div>
    </main>
  );
}